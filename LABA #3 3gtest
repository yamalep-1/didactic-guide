#include <gtest/gtest.h>
#include "array_processor.h"
TEST(ArrayProcessorTest, SimpleConditions) {
    std::vector<double> input = {-1.0, 2.0, -3.0, 4.0, -5.0, 2.0};
    std::vector<double> expected = {5.0, 4.0, 3.0, 2.0, 1.0};
    EXPECT_EQ(ArrayProcessor::SortAndFilter(input), expected);

    input = {0.0, -0.0};
    expected = {0.0};
    EXPECT_EQ(ArrayProcessor::SortAndFilter(input), expected);
}
TEST(ArrayProcessorTest, StringConditions) {
    std::vector<double> input = {1.0, -2.0, 3.0, -4.0, 5.0};
    std::vector<double> expected = {5.0, 4.0, 3.0, 2.0, 1.0};
    EXPECT_EQ(ArrayProcessor::SortAndFilter(input), expected);

    input = {-1.0, -2.0, -3.0, -4.0, -5.0};
    expected = {5.0, 4.0, 3.0, 2.0, 1.0};
    EXPECT_EQ(ArrayProcessor::SortAndFilter(input), expected);
}
TEST(ArrayProcessorTest, CollectionConditions) {
    std::vector<std::vector<double>> inputs = {
        {-1.0, 2.0, -3.0, 4.0, -5.0, 2.0},
        {10.0, -20.0, 30.0, -40.0, 50.0},
        {0.1, -0.2, 0.3, -0.4, 0.5}
    };
std::vector<std::vector<double>> expected_outputs = {
        {5.0, 4.0, 3.0, 2.0, 1.0},
        {50.0, 40.0, 30.0, 20.0, 10.0},
        {0.5, 0.4, 0.3, 0.2, 0.1}
    };
for (size_t i = 0; i < inputs.size(); ++i) {
        EXPECT_EQ(ArrayProcessor::SortAndFilter(inputs[i]), expected_outputs[i]);
    }
}
int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}:
